alias pll='cd ~/.common/ && git pull && cd -'
alias psh='cd ~/.common && git add -A && git commit -a && git push origin master && cd -'
alias cp='cp -r'
alias rm='rm -r'
alias mkdir='mkdir -p'
alias toutf8="iconv -c -f cp1251 -t utf8"
alias tawk="awk -F '\t' -v OFS='\t'"
alias lcread="mapreduce -server local -read"
alias lcwrite="mapreduce -server local -write"
alias mrread="mapreduce -read"
alias mrwrite="mapreduce -write"
alias vpn=/opt/cisco/anyconnect/bin/vpnui
alias matlab=~/Dist/matlab2013a/bin/matlab
alias vims='vim -S .vim.session'
alias gda='gdb --args'
alias kchg='ls -t | head -1 | xargs kcachegrind'
alias work="ssh bahdanau@elisa1.iro.umontreal.ca"
#alias vim="vim --servername vim"
alias sync_source="rsync -rvz --exclude='*/.*' --exclude='*.pkl' --exclude='*.pyc'"
alias iro='sshpass -p 1e9_is-not_INF'
alias sqb="squeue -u $USER | sort -g | awk 'NR != 1 {print $1}' | tee | xargs -IA scontrol show job A | grep 'Command\|JobId\|JobState\|Restarts\|Gres\|QOS\|BatchHost'"

alias j1='%1'
alias j2='%2'
alias j3='%3'
alias j4='%4'
alias j5='%5'

function theano_flags_and_rc {
    echo "THEANO_FLAGS=$THEANO_FLAGS"
    echo
    echo ".theanorc:"
    echo
    cat ~/.theanorc
}

function theano_default {
    export THEANO_FLAGS=""
}

function theano_cpu_profile {
    export THEANO_FLAGS="profile=True,profile_memory=True"
    echo "THEANO_FLAGS=$THEANO_FLAGS"
}

function theano_fast {
    export THEANO_FLAGS="optimizer=fast_run"
    echo "THEANO_FLAGS=$THEANO_FLAGS"
}

function theano_gpu_fast {
    export CUDA_LAUNCH_BLOCKING=0
    export THEANO_FLAGS="optimizer=fast_run,device=gpu,floatX=float32"
    echo "CUDA_LAUNCH_BLOCKING=$CUDA_LAUNCH_BLOCKING"
    echo "THEANO_FLAGS=$THEANO_FLAGS"
}

function sync_with_ya {
    sync_source ~/Dist/blocks $YA:dist
    sync_source ~/Jacobs/Master/fully-neural-lvsr $YA:dist
    sync_source ~/Dist/theano $YA:dist
    sync_source ~/Dist/fuel $YA:dist
    sync_source ~/Dist/picklable_itertools $YA:dist
}

function make_tunnels {
    ssh -N -L 1280:127.0.0.1:5006 $YA2 &
    ssh -N -L 1281:127.0.0.1:8888 $YA2 &
    ssh -N -L 2280:127.0.0.1:5006 $YA & 
    ssh -N -L 2281:127.0.0.1:8888 $YA &
}

function reload_zsh_configs {
    source ~/.zshrc
    source ~/.zsh_aliases
}

function rossetup {
    . /opt/ros/hydro/setup.zsh
    [ -f devel/setup.zsh ] && . devel/setup.zsh
}

function showline() {
    num=$1
    shift 1
    for fn
    do
        echo "$fn:"
        tawk "NR==$num{print;exit}" $fn
    done
}

function rc() {
    head -1 $1 | tawk '{print NF}'
}

function middle() {
    start=$1
    count=$2
    f=$3
    head -$start $f | tail -$count | vim -
}

function yank() {
    xclip -selection clipboard
}

function howmuch() {
    NUM=$((2 * $1 + 1))
    nvidia-smi -q -d MEMORY | grep Used | awk "NR == $NUM {print \$3}"
}

function peek_gpu_memory() {
    MAX=0
    ITER=0
    TIME=0.01
    while true;
    do
        CUR=`howmuch $1`
        if [ $CUR -gt $MAX ];
        then
            MAX=$CUR;
            echo "After $ITER tries new peek is " $MAX
        fi
        sleep $TIME
        ITER=$(($ITER + 1))
    done
}

function nvcloud_show { 
    dgx data download -f $1; cat ./data/$1 
}
